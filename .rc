#!/bin/sh

# settings for common commands
alias cp="cp -i"
alias mv="mv -i"
alias bc="bc -ql"
alias mkdir="mkdir -p"
alias kat='kat -t ~/.data/misc/kat-theme'
alias cls="clear"
alias grep='grep --color=always'
alias ls='ls --color=auto'
alias l="ls -lah --color=auto"
alias :q="exit"

# application aliases
alias cc="$CC"
alias v="$EDITOR"
alias vw="$EDITOR ~/.nky/me/personal/wiki/Todo.md"
alias vim="$EDITOR"
alias rb="sudo reboot"
alias po="sudo poweroff"
alias sl="echo \"echo mem > /sys/power/state\" | ssu -s"
alias foldersize="sudo du -shc"
alias homefiles="find ~ -not -path '*/.local/share/*' -not -path '*/.local/state/*' -not -path '*/.mozilla/*' -not -path '*/.thunderbird/*' -not -path '*/.wakatime/*' -not -path '*/Music/*' -not -path '*/coslinux/*' -not -path '*/stagit/*' -not -path '*/Zig/*' -not -path '*/env/*' -not -path '*/.cache/*' -not -path '*/night0721/*' -not -path '*/.gnupg/*' -not -path '*/.git/*' -not -path '*/node_modules/*' -type f -print | fnf"
alias gitfolders="find . -type d -name '.git' -not -path '*nvim*' -not -path '*tmux*'"
alias convertunix="find . -type f -print0 | xargs -0 dos2unix --"
alias hst="cat ~/.cache/sh_history | sort | uniq | fnf -l 100 | tr -d '\n' | wl-copy"
alias ncdu="ncdu --color dark -x --exclude images"
alias s="ssu"
alias ipv4="echo \$(curl -s ipinfo.io/ip)"
alias fnf="fnf -l 50"
alias hp="bluetoothctl power on && bluetoothctl connect '50:DE:06:D7:C7:30' && pactl set-default-sink 'bluez_output.50_DE_06_D7_C7_30.1'"
alias dn="ssu rc-service networking restart &"
alias oe="opustags --in-place -e"
alias vg="valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes"
alias cck="cppcheck --std=c99 --check-level=exhaustive"
alias wu="ssu wg-quick up wg0"
alias wd="ssu wg-quick down wg0"
alias mc="prismlauncher & disown"
alias ij="intellij-idea-community-edition & disown"
alias pw="apm -L | fnf | xargs -r apm"

# Change directory aliases
alias .='cd ~'
alias ..='cd ..'

alias config='/usr/bin/git --git-dir=$HOME/.nky/git/night0721/ --work-tree=$HOME'
alias cad='config add'
alias cco='config commit -m'
alias cpu='config push'
alias cst='config status -u'
alias cdf='config diff'

# push to github with the lazy way
g() {
	git add .
	git commit -m "$1"
	git push
}

lfcd() {
    tmp="$(mktemp -uq)"
    trap 'rm -f $tmp >/dev/null 2>&1 && trap - HUP INT QUIT TERM PWR EXIT' HUP INT QUIT TERM PWR EXIT
    lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
    fi
}

c() {
    ccc "$@"
    cd "$(cat "${XDG_CACHE_HOME}/ccc/.ccc_d")"
}

ma() { section="$(test -z $2 && echo 0 || echo $1)" page="${2:-$1}" ; curl -s "https://man-api.ch/v1/buster/${section}/${page}" | nvim +Man!; }

manl() { man $(man -k . | awk -F'-' '{print $1}' | awk -F'(' '{ print $1 }' | sed 's/ //' | fnf); }

webjpeg() { convert $1 -sampling-factor 4:2:0 -strip -quality 75 -interlace JPEG -colorspace sRGB -resize $2 $3; }

findfiles() {
    find . -not -path "*/.mozilla/*" -not -path "*/.cache/*" -not -path "*/.local/share/*" -not -path "*/.local/state/*" -not -path "*/env/*" -not -path "*/node_modules/*" -not -path "*/pdfs/*" -not -path "*/build/*" -not -path "*/.git/*" -not -path "*/npm/*" -not -path "*/.gnupg/*" -not -path "*/.wakatime/*" -not -path "*/textbook/*" -not -path "*/stagit/*" -not -path "*/Music/*" -not -path "*/Video/*" -not -path "*/cath-docs/*" -not -name "*.tar.gz" -type f -not -executable -exec grep -rnwsRHn -e "$1" {} + 2> /dev/null
}

asz() {
	([ $# -eq 0 ] && apk info -e -s '*' || apk info -s "$@") | while IFS=' ' read -r p _ _; do read -r l m; printf '%s\t%s\n' "$l$m" "$p"; read; done | sort -h
}

chtsh() {
	languages=$(echo "react nextjs javascript python java golang c cpp typescript rust" | tr " " "\n")
	core_utils=$(echo "find xargs sed awk" | tr " " "\n")
	selected=$(echo "$languages\n$core_utils" | fnf)

	read -p "What you want to learn: " query

	if echo "$languages" | grep -qs $selected; then
		curl cht.sh/$selected/$(echo "$query" | tr " " "+")
	else
		curl cht.sh/$selected~$query
	fi
}

screenrecord() {
	wf-recorder -g "$(slurp)" -f "$HOME/.nky/Video/$(date +"%Y%m%d%H%M%S").mp4"
	luft "Screen recording ended"
	pkill wf-recorder
}

cpc() {
	# ssu pacman -Rns $(pacman -Qdttq) # remove orphans
	apk cache clean
	ssu rm -rf ~/.npm /usr/share/doc /usr/share/licenses /usr/share/gtk-doc /usr/lib/node_modules/npm/docs /usr/share/icons/Catppuccin-Mocha-Standard-Lavender-Dark/{gnome-shell,gtk-4.0,cinnamon,gtk-2.0,plank,xfwm4} /usr/share/icons/Catppuccin-Mocha-Standard-Lavender-Dark-{xhpdi,hdpi}/xfwm4 /var/lib/systemd/coredump /usr/share/gnupg/*.txt /usr/share/{zsh,fish,emacs,foot,themes} /usr/share/man/{de,fr,sv,ro,ru,pt_BR,zh_CN,it,ja,pl,ko,cs,tr,zh_TW,da,sr,hu,hr,nl,es,pt,jp,id}
	ssu find / -xdev \( -name "*.md" -o -name "LICENSE" \) -type f -delete
}

replace() {
    echo "Type the pattern you want to replace"
    read pattern
    echo "Type the phrase you want to replace with"
    read replacewith

    find . -type f -exec sed -i "s/$pattern/$replacewith/g" {} \;
}

jy
